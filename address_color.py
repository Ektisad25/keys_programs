#pip install bit
from bit import PrivateKey

def search_private_key_with_prefix(target_prefix, num_attempts):
    
    count = 0
    found_count = 0
    
    while found_count < num_attempts:
        # Generate a random Bitcoin private key
        key = PrivateKey()
        
        # Check the address generated by the private key
        address = key.address
        if address.startswith(target_prefix):
            found_count += 1
            print(f'Found address with prefix {target_prefix}:')
            print(f'Private Key (WIF): {key.to_wif()}')  # Display private key in WIF format
            print(f'Generated Address: {address}')
            print('---')
        
        # Print progress for every 100,000 attempts
        count += 1
        if count % 100000 == 0:
            print(f'Tried {count} keys...')
    
    print(f'Completed search. Found {found_count} addresses with prefix {target_prefix}.')
    return None

# Example usage:
target_prefix = '1_add_your prefix address'  # change target prefix to prefered target prefix should start with 1 , if caracters is bigger than 4 caracters of target it take time better 3
num_attempts = 2  # Number of matching addresses to find that start with target prefix , this will find 2 addresses

# Search for private keys generating addresses with the target prefix
search_private_key_with_prefix(target_prefix, num_attempts)
